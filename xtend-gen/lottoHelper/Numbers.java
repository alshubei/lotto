package lottoHelper;

import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.xbase.lib.Functions.Function0;

@SuppressWarnings("all")
public class Numbers {
  public static String ours_14_5_2021 = new Function0<String>() {
    @Override
    public String apply() {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("5 10 23 38 42 2 7");
      _builder.newLine();
      _builder.append("5 10 23 40 42 2 7");
      _builder.newLine();
      _builder.append("5 10 14 35 42 2 7");
      _builder.newLine();
      _builder.append("5 10 20 40 42 2 7");
      _builder.newLine();
      _builder.append("5 10 14 39 42 2 7");
      _builder.newLine();
      _builder.append("5 10 14 17 50 2 7");
      _builder.newLine();
      _builder.append("5 10 17 21 33 1 10");
      _builder.newLine();
      _builder.append("5 10 12 44 46 1 10");
      _builder.newLine();
      _builder.append("5 10 21 28 30 1 10");
      _builder.newLine();
      _builder.append("5 10 7 14 30 1 10");
      _builder.newLine();
      _builder.append("5 10 11 15 47 1 10");
      _builder.newLine();
      _builder.append("5 10 18 23 47 1 10");
      _builder.newLine();
      _builder.append("5 10 2 7 25 1 10");
      _builder.newLine();
      _builder.append("5 10 25 29 18 1 10");
      _builder.newLine();
      _builder.append("5 10 33 17 18 1 10");
      _builder.newLine();
      _builder.append("5 10 23 18 15 1 10");
      _builder.newLine();
      _builder.append("5 10 23 18 41 1 10 ");
      _builder.newLine();
      _builder.append("5 10 23 45 47 1 10");
      _builder.newLine();
      _builder.newLine();
      return _builder.toString();
    }
  }.apply();
  
  public static String ours_7_5_2021 = new Function0<String>() {
    @Override
    public String apply() {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("5 7 23 34 43 5 7");
      _builder.newLine();
      _builder.append("5 7  21 31 41 1 3");
      _builder.newLine();
      _builder.append("5 7  25 35 45 2 3");
      _builder.newLine();
      _builder.append("5 7  23 31 45 4 6");
      _builder.newLine();
      _builder.append("3 9  29 36 44 8 9");
      _builder.newLine();
      _builder.append("3 9  23 21 25 1 5");
      _builder.newLine();
      _builder.append("3 9  41 43 47 1 2");
      _builder.newLine();
      _builder.append("6 10 26 37 49 2 7");
      _builder.newLine();
      _builder.append("6 10 27 39 46 5 9");
      _builder.newLine();
      _builder.append("6 10 23 33 43 3 8");
      _builder.newLine();
      _builder.append("6 9 17 29 50 5 8");
      _builder.newLine();
      _builder.append("5 17 27 40 43 1 6");
      _builder.newLine();
      _builder.append("2 3  5 12 45 6 9");
      _builder.newLine();
      _builder.append("14 2 2 23 32 39 2 9");
      _builder.newLine();
      _builder.append("7 19 30 39 48  7 8");
      _builder.newLine();
      _builder.append("3 5 13 36 48 6 7");
      _builder.newLine();
      _builder.append("16 3 3 34 40 47 4 7");
      _builder.newLine();
      _builder.append("13 1 4 25 26 49 3 10");
      _builder.newLine();
      _builder.append("7 16 19 31 38 6 8");
      _builder.newLine();
      _builder.append("3 15 22 43 47 2 9");
      _builder.newLine();
      _builder.append("2 15 31 37 42 4 6");
      _builder.newLine();
      _builder.append("9 17 25 28 45 2 8");
      _builder.newLine();
      _builder.append("5 6 20 27 34 2 4");
      _builder.newLine();
      _builder.append("5 27 31 33 47 3 7");
      _builder.newLine();
      _builder.append("13 1 6 32 34 45 5 6");
      _builder.newLine();
      _builder.append("19 17 23 31 50 3 4");
      _builder.newLine();
      _builder.append("20 2 1 23 25 50 6 7");
      _builder.newLine();
      _builder.append("1 9 17 23 31 41 3 4");
      _builder.newLine();
      _builder.append("20 2 3 25 47 50 6 7");
      _builder.newLine();
      _builder.append("3 7 24 25 46 7 8");
      _builder.newLine();
      _builder.append("3 16 24 17 50 1 5");
      _builder.newLine();
      _builder.append("8 13 18 15 44 1 8");
      _builder.newLine();
      _builder.append("7 6 8 12 35 4 7");
      _builder.newLine();
      _builder.append("9 17 38 33 47 4 6");
      _builder.newLine();
      _builder.append("11 3 1 38 33 50 4 5");
      _builder.newLine();
      _builder.append("11 1 5 31 25 38 4 6");
      _builder.newLine();
      _builder.append("2 6 17 18 49 1 2");
      _builder.newLine();
      _builder.newLine();
      return _builder.toString();
    }
  }.apply();
  
  public static String won_2021 = new Function0<String>() {
    @Override
    public String apply() {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("01.01.2021: 17 36 38 43 46 4 6");
      _builder.newLine();
      _builder.append("08.01.2021: 8 22 25 38 50 8 9");
      _builder.newLine();
      _builder.append("15.01.2021: 10 19 32 36 46 4 6");
      _builder.newLine();
      _builder.append("22.01.2021: 38 40 41 46 48 2 6");
      _builder.newLine();
      _builder.append("29.01.2021: 16 30 33 36 43 4 8");
      _builder.newLine();
      _builder.append("05.02.2021: 2 3 16 33 46 2 10");
      _builder.newLine();
      _builder.append("12.02.2021: 15 18 24 27 44 2 7");
      _builder.newLine();
      _builder.append("19.02.2021: 27 35 36 38 41 5 7");
      _builder.newLine();
      _builder.append("26.02.2021: 3 13 24 29 32 1 7");
      _builder.newLine();
      _builder.append("05.03.2021: 9 23 34 40 42 1 4");
      _builder.newLine();
      _builder.append("12.03.2021: 6 11 18 26 34 5 8");
      _builder.newLine();
      _builder.append("19.03.2021: 3 11 19 34 37 8 9");
      _builder.newLine();
      _builder.append("26.03.2021: 7 38 41 44 50 1 8");
      _builder.newLine();
      _builder.append("02.04.2021: 1 3 4 36 43 2 3");
      _builder.newLine();
      _builder.append("09.04.2021: 11 18 23 29 32 3 7");
      _builder.newLine();
      _builder.append("16.04.2021: 12 19 20 28 31 6 9");
      _builder.newLine();
      _builder.append("23.04.2021: 3 6 11 14 49 1 5");
      _builder.newLine();
      _builder.append("30.04.2021: 23 27 34 40 43 5 7");
      _builder.newLine();
      _builder.append("07.05.2021: 3 7 19 27 29 7 10");
      _builder.newLine();
      return _builder.toString();
    }
  }.apply();
  
  public static String won_2020 = new Function0<String>() {
    @Override
    public String apply() {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("2020.12.25: 7 10 19 26 42 1 9");
      _builder.newLine();
      _builder.append("2020.12.18: 4 17 27 28 50 5 8");
      _builder.newLine();
      _builder.append("2020.12.11: 4 13 15 41 49 1 9");
      _builder.newLine();
      _builder.append("2020.12.04: 1 27 37 40 41 7 10");
      _builder.newLine();
      _builder.append("2020.11.27: 1 2 22 25 30 5 10");
      _builder.newLine();
      _builder.append("2020.11.20: 18 20 34 49 50 7 8");
      _builder.newLine();
      _builder.append("2020.11.13: 5 17 21 37 38 1 4");
      _builder.newLine();
      _builder.append("2020.11.06: 5 12 26 47 50 2 3");
      _builder.newLine();
      _builder.append("2020.10.30: 11 19 24 33 39 1 4");
      _builder.newLine();
      _builder.append("2020.10.23: 17 21 23 37 45 7 9");
      _builder.newLine();
      _builder.append("2020.10.16: 5 11 35 44 50 4 10");
      _builder.newLine();
      _builder.append("2020.10.09: 1 11 17 23 29 1 8");
      _builder.newLine();
      _builder.append("2020.10.02: 15 19 34 39 49 2 7");
      _builder.newLine();
      _builder.append("2020.09.25: 1 7 9 29 46 9 10");
      _builder.newLine();
      _builder.append("2020.09.18: 7 12 14 40 42 7 8");
      _builder.newLine();
      _builder.append("2020.09.11: 2 5 24 43 45 4 10");
      _builder.newLine();
      _builder.append("2020.09.04: 5 23 28 38 49 3 9");
      _builder.newLine();
      _builder.append("2020.08.28: 8 11 22 38 41 4 7");
      _builder.newLine();
      _builder.append("2020.08.21: 26 27 30 46 49 1 2");
      _builder.newLine();
      _builder.append("2020.08.14: 9 20 27 35 48 5 9");
      _builder.newLine();
      _builder.append("2020.08.07: 4 9 15 24 28 2 6");
      _builder.newLine();
      _builder.append("2020.07.31: 3 19 28 43 49 2 3");
      _builder.newLine();
      _builder.append("2020.07.24: 7 11 19 32 43 2 8");
      _builder.newLine();
      _builder.append("2020.07.17: 13 21 25 34 35 5 10");
      _builder.newLine();
      _builder.append("2020.07.10: 5 6 9 15 29 4 9");
      _builder.newLine();
      _builder.append("2020.07.03: 12 34 36 47 48 5 7");
      _builder.newLine();
      _builder.append("2020.06.26: 14 16 32 34 47 7 9");
      _builder.newLine();
      _builder.append("2020.06.19: 2 22 33 38 47 2 9");
      _builder.newLine();
      _builder.append("2020.06.12: 7 16 22 30 48 2 8");
      _builder.newLine();
      _builder.append("2020.06.05: 9 16 17 29 39 1 8");
      _builder.newLine();
      _builder.append("2020.05.29: 8 22 31 32 36 6 10");
      _builder.newLine();
      _builder.append("2020.05.22: 12 15 32 40 45 7 10");
      _builder.newLine();
      _builder.append("2020.05.15: 21 27 29 34 49 8 10");
      _builder.newLine();
      _builder.append("2020.05.08: 9 11 15 36 43 8 9");
      _builder.newLine();
      _builder.append("2020.05.01: 6 11 12 21 41 1 2");
      _builder.newLine();
      _builder.append("2020.04.24: 6 13 15 34 35 1 5");
      _builder.newLine();
      _builder.append("2020.04.17: 1 18 23 33 41 2 6");
      _builder.newLine();
      _builder.append("2020.04.10: 2 7 8 43 50 2 3");
      _builder.newLine();
      _builder.append("2020.04.03: 3 21 26 40 41 8 10");
      _builder.newLine();
      _builder.append("2020.03.27: 13 19 23 34 41 3 8");
      _builder.newLine();
      _builder.append("2020.03.20: 9 14 28 30 37 3 10");
      _builder.newLine();
      _builder.append("2020.03.13: 1 17 29 39 42 7 8");
      _builder.newLine();
      _builder.append("2020.03.06: 15 19 35 36 41 5 10");
      _builder.newLine();
      _builder.append("2020.02.28: 12 22 24 29 38 5 6");
      _builder.newLine();
      _builder.append("2020.02.21: 2 13 39 45 47 4 6");
      _builder.newLine();
      _builder.append("2020.02.14: 2 6 30 32 49 1 4");
      _builder.newLine();
      _builder.append("2020.02.07: 7 16 22 36 44 3 4");
      _builder.newLine();
      _builder.append("2020.01.31: 1 7 12 23 39 3 4");
      _builder.newLine();
      _builder.append("2020.01.24: 5 12 20 29 48 7 9");
      _builder.newLine();
      _builder.append("2020.01.17: 1 23 32 45 49 5 10");
      _builder.newLine();
      _builder.append("2020.01.10: 4 14 25 34 49 4 9");
      _builder.newLine();
      _builder.append("2020.01.03: 6 27 30 35 41 4 5");
      _builder.newLine();
      return _builder.toString();
    }
  }.apply();
}
